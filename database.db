import sqlite3import hashlib# Create a new SQLite database in memory (or use a file by replacing ':memory:' with a filename like 'alfurqan.db')db_path = "/mnt/data/alfurqan.db"conn = sqlite3.connect(db_path)cursor = conn.cursor()# 1. USERS TABLEcursor.execute("DROP TABLE IF EXISTS users;")cursor.execute("""CREATE TABLE users (    id INTEGER PRIMARY KEY AUTOINCREMENT,    username TEXT UNIQUE NOT NULL,    password TEXT NOT NULL,    role TEXT NOT NULL DEFAULT 'user')""")admin_password = hashlib.sha256("admin".encode()).hexdigest()cursor.execute("INSERT INTO users (username, password, role) VALUES (?, ?, ?)", ("admin", admin_password, "admin"))# 2. STUDENTS TABLEcursor.execute("DROP TABLE IF EXISTS students;")cursor.execute("""CREATE TABLE students (    id INTEGER PRIMARY KEY AUTOINCREMENT,    full_name TEXT NOT NULL,    gender TEXT CHECK (gender IN ('male', 'female')),    class TEXT NOT NULL,    age INTEGER,    parent_name TEXT,    phone TEXT)""")cursor.executemany("INSERT INTO students (full_name, gender, class, age, parent_name, phone) VALUES (?, ?, ?, ?, ?, ?)", [    ('Amina Yusuf', 'female', 'JSS 1', 12, 'Yusuf Bello', '08012345678'),    ('Ibrahim Musa', 'male', 'JSS 2', 13, 'Musa Garba', '08023456789')])# 3. ATTENDANCE TABLEcursor.execute("DROP TABLE IF EXISTS attendance;")cursor.execute("""CREATE TABLE attendance (    id INTEGER PRIMARY KEY AUTOINCREMENT,    student_id INTEGER NOT NULL,    date TEXT NOT NULL,    status TEXT CHECK (status IN ('present', 'absent')) NOT NULL,    FOREIGN KEY (student_id) REFERENCES students(id))""")cursor.executemany("INSERT INTO attendance (student_id, date, status) VALUES (?, ?, ?)", [    (1, '2025-07-30', 'present'),    (2, '2025-07-30', 'absent')])# 4. SUBJECTS TABLEcursor.execute("DROP TABLE IF EXISTS subjects;")cursor.execute("""CREATE TABLE subjects (    id INTEGER PRIMARY KEY AUTOINCREMENT,    name TEXT NOT NULL,    teacher_name TEXT)""")cursor.executemany("INSERT INTO subjects (name, teacher_name) VALUES (?, ?)", [    ('Mathematics', 'Mr. Lawal'),    ('English', 'Mrs. Aisha')])# 5. SCORES TABLEcursor.execute("DROP TABLE IF EXISTS scores;")cursor.execute("""CREATE TABLE scores (    id INTEGER PRIMARY KEY AUTOINCREMENT,    student_id INTEGER NOT NULL,    subject_id INTEGER NOT NULL,    term TEXT NOT NULL,    score INTEGER NOT NULL,    FOREIGN KEY (student_id) REFERENCES students(id),    FOREIGN KEY (subject_id) REFERENCES subjects(id))""")cursor.executemany("INSERT INTO scores (student_id, subject_id, term, score) VALUES (?, ?, ?, ?)", [    (1, 1, 'First Term', 88),    (2, 2, 'First Term', 72)])# Commit and closeconn.commit()conn.close()# Return path to the databasedb_path